apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pg-rook-sf
spec:
  serviceName: pg-rook-sf
  replicas: 1
  selector:
    matchLabels:
      app: pg-rook-sf
  template:
    metadata:
      labels:
        app: pg-rook-sf
    spec:
      containers:
        - name: pg-rook-sf
          image: postgres:10.4
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          args:
          - -c 
          - config_file=/etc/postgresql/postgresql.conf
          lifecycle:
            postStart:
              exec:
                command:
                  - sh
                  - -c
                  - chmod a+w /mnt/postgresql/xlog/
          envFrom:
            - configMapRef:
                name: postgres-config
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: TZ
              value: Asia/Tokyo
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pg-rook-vol
            - mountPath: /mnt/postgresql/xlog
              name: pg-rook-vol-xlog
            - mountPath: /etc/postgresql
              readOnly: true
              name: postgres-conf
          livenessProbe:
              tcpSocket:
                 port: 5432
              initialDelaySeconds: 10
              periodSeconds: 3
              timeoutSeconds: 3
              failureThreshold: 2
          readinessProbe:
              tcpSocket:
                 port: 5432
              initialDelaySeconds: 5
              periodSeconds: 3
              timeoutSeconds: 1
              successThreshold: 1
      volumes:
        - name: pg-rook-vol
          persistentVolumeClaim:
            claimName: pvc-pg-rook-sf
        - name: pg-rook-vol-xlog
          persistentVolumeClaim:
            claimName: pvc-pg-rook-sf-xlog
        - name: postgres-conf
          configMap:
            name: postgres-conf
            items:
              - key: postgresql.conf
                path: postgresql.conf
      nodeSelector:
        type: node.db.postgres
